/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _NICINFO_H_RPCGEN
#define _NICINFO_H_RPCGEN

#include <vmxrpc.h>


#ifdef __cplusplus
extern "C" {
#endif


enum NicInfoVersion {
	NIC_INFO_V2 = 2,
};
typedef enum NicInfoVersion NicInfoVersion;
#define NICINFO_MAX_IP_LEN 64
#define NICINFO_MAX_IPS 64
#define NICINFO_MAX_NICS 16
#define NICINFO_MAC_LEN 18

struct VmIpAddress {
	uint32 addressFamily;
	Bool dhcpEnabled;
	char ipAddress[NICINFO_MAX_IP_LEN];
	char subnetMask[NICINFO_MAX_IP_LEN];
};
typedef struct VmIpAddress VmIpAddress;

struct GuestNic {
	char macAddress[NICINFO_MAC_LEN];
	struct {
		u_int ips_len;
		struct VmIpAddress *ips_val;
	} ips;
};
typedef struct GuestNic GuestNic;

struct GuestNicList {
	struct {
		u_int nics_len;
		struct GuestNic *nics_val;
	} nics;
};
typedef struct GuestNicList GuestNicList;

struct GuestNicProto {
	NicInfoVersion ver;
	union {
		struct GuestNicList *nicsV2;
	} GuestNicProto_u;
};
typedef struct GuestNicProto GuestNicProto;

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_NicInfoVersion (XDR *, NicInfoVersion*);
extern  bool_t xdr_VmIpAddress (XDR *, VmIpAddress*);
extern  bool_t xdr_GuestNic (XDR *, GuestNic*);
extern  bool_t xdr_GuestNicList (XDR *, GuestNicList*);
extern  bool_t xdr_GuestNicProto (XDR *, GuestNicProto*);

#else /* K&R C */
extern bool_t xdr_NicInfoVersion ();
extern bool_t xdr_VmIpAddress ();
extern bool_t xdr_GuestNic ();
extern bool_t xdr_GuestNicList ();
extern bool_t xdr_GuestNicProto ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_NICINFO_H_RPCGEN */
