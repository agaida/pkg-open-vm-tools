Project information:

open-vm-tools <http://open-vm-tools.sourceforge.net/>

	These are the release notes for the open-vm-tools.  Read them carefully, as
they explain how to build this project for different platforms and various 
different Linux distributions.

================================================================================
General information:

(*)What are the open-vm-tools? 
	The open-vm-tools are a subset of the VMware Tools, currently composed of
kernel modules for Linux and user-space programs for all VMware supported Unix
like guest operating systems.

(*)Where do I find documentation for the open-vm-tools beyond this README?
	Please refer to the main project web site for all the latest documentation 
at: <http://open-vm-tools.sourceforge.net/> 

(*)How do I build the open-vm-tools?
	The open-vm-tools uses the GNU Automake tool for generating Makefiles to 
build all sources.  More information about Automake can be found here: 
<http://sources.redhat.com/automake/>

For more information on building this project see the "Project build
information" section of this document. 

================================================================================
Project build information:

(*)Getting configure options & help:
	If you are looking for help or additional settings for the building of this
project the following configure command will display a list of help options:
	"./configure --help"

(*)Using configure:
	When using configure in the steps below it is only necessary to call
"./configure" once unless there was a problem after the first invocation.

(*)Building Linux kernel modules:
1) ./configure
2) make modules

(*)Building Unix user-space programs:
1) ./configure
2) make

(*)Why is there no "make install" make target?
	In their current state, the various Tools applications and modules require a
fair bit of installation support to run properly.  VMware currently maintains a 
Perl-based installer for the Tools that is pretty good about providing that 
support under a variety of distributions and environments.  It doesn't make 
sense to rewrite this installer under make; distribution-specific Tools 
packages (tailored for a particular target environment) are better suited to 
the task.  If you are interested in creating a Tools package, please see
<http://open-vm-tools.sourceforge.net/> for more information.

================================================================================
Build suggestions:
	Each Linux distribution puts binaries, libraries and development headers in 
different locations.  This leads to having to setup different paths for the
compiler and linker for the Automake system.  Below is a list of known
configurations to build for platforms that do not "just work" out of the box
or the tar-ball as the case may be.

General Build note:
	Please make note that the "--disable-multimon" flag should only be used when
there are no libXinerama libraries installed, or you do not want to enable multi
monitor support.

(*)Suse Enterprise 10.1 (i386 & x86_64):
i386:
./configure LDFLAGS="-L/opt/gnome/lib"

x86_64:
./configure LDFLAGS="-L/opt/gnome/lib64"

(*)OpenSolaris "Nevada" (i386 & x86_64):
	Make sure that the GNU tools are in your shell's path.  The default GNU tools
location on OpenSolaris is: "/usr/sfw/bin".  Once the path is set in your build
shell then the following configure command should work: 

./configure --disable-multimon 

(*)FreeBSD 6.2 (i386 & x86_64):
./configure LDFLAGS="-L/usr/local/lib"

================================================================================
Other resources:
	There are also open-source video & mouse drivers for Xorg/XFree86 that
provide better performance and additional features to Linux, Solaris, and BSD
derivatives guests running X11. 

	The drivers 'xf86-input-vmmouse' and 'xf86-video-vmware' are included with 
recent Xorg releases, and it shouldn't be necessary to do anything extra to 
obtain them.  If you want to obtain them separately, they can be downloaded at:
<http://xorg.freedesktop.org/releases/individual/driver/>

================================================================================
Guest operating systems used to test on this release:

(*)Fedora Core 6 (i386 & x86_64)
(*)Fedora Core 7 (i386 & x86_64)
(*)Suse Enterprise 10.0 (i386 & x86_64)
(*)Suse Enterprise 10.1 (i386 & x86_64)
(*)Open Suse 10.3 (i386 & x86_64)
(*)Redhat 9.0 (i386)
(*)Redhat Enterprise 5 (i386 & x86_64)
(*)Redhat Enterprise 4 (i386 & x86_64)
(*)FreeBSD 6.2 (i386 & x86_64)
(*)OpenSolaris 10 "Nevada" (i386 & x86_64)
(*)Ubuntu Feisty 7.04 (i386 & x86_64)
(*)Ubuntu Dapper 6.06 (i386 & x86_64)

===============================================================================
Known issues:

(*)When building kernel modules for any 2.4.x kernel the module binaries that
are created have unexpected names.  The current build system names all kernel modules in this format: "<module name>-<kernel version>".  Below is an example of where to find the built modules:

All built kernel modules are located in subdirectories of "<sourcefiles>/modules/linux" directory.

vmblock:
	"vmblock/driver-<kernel version>/vmblock-xxx-<kernel version>"

vmhgfs:
	"vmhgfs/vmhgfs-<kernel version>"

vmmemctl:
	"vmmemctl/vmmemctl-<kernel version>"

vmxnet:
	"vmxnet/vmxnet-<kernel version>"


(*)Building with GCC versions before 3.0 will fail.  GCC will complain that
"-fno-strict-aliasing -Wno-unused-value are invalid options", and fails to
build "vm_atomic.h" saying that "a forbidden register was spilled", or
"-Wno-unused-value does not exist".

===============================================================================
